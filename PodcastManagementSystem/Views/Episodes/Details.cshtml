@model PodcastManagementSystem.Models.Episode
@using Microsoft.AspNetCore.Identity
@using PodcastManagementSystem.Models
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Episode Details";
    var currentUser = await UserManager.GetUserAsync(User);
    var isAdmin = currentUser?.Role == UserRole.Admin;
    var canEdit = isAdmin || (currentUser != null && Model.Podcast.CreatorID == currentUser.Id);
}

<div class="mb-4">
    <a asp-action="Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Back to Episodes
    </a>
</div>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="card mb-4">
    <div class="card-body">
        <h1 class="card-title mb-4">@Model.Title</h1>

        <div class="row mb-4">
            <div class="col-md-6">
                <p><strong><i class="fas fa-microphone"></i> Podcast:</strong> @Model.Podcast.Title</p>
                <p><strong><i class="fas fa-user"></i> Host:</strong> @Model.Host</p>
                <p><strong><i class="fas fa-tag"></i> Topic:</strong> @Model.Topic</p>
            </div>
            <div class="col-md-6">
                <p><strong><i class="fas fa-calendar"></i> Released:</strong> @Model.ReleaseDate.ToString("MMMM dd, yyyy")</p>
                <p><strong><i class="fas fa-clock"></i> Duration:</strong> @Model.Duration minutes</p>
                <p><strong><i class="fas fa-eye"></i> Views:</strong> @Model.PlayCount</p>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.AudioFileURL))
        {
            <div class="mb-4">
                <h5><i class="fas fa-headphones"></i> Audio</h5>
                <audio controls class="w-100" controlsList="nodownload">
                    <source src="@Model.AudioFileURL" type="audio/mpeg">
                    <source src="@Model.AudioFileURL" type="audio/mp3">
                    Your browser does not support the audio element.
                </audio>
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.VideoFileURL))
        {
            <div class="mb-4">
                <h5><i class="fas fa-video"></i> Video</h5>
                <video controls class="w-100" style="max-height: 500px;" controlsList="nodownload">
                    <source src="@Model.VideoFileURL" type="video/mp4">
                    Your browser does not support the video element.
                </video>
            </div>
        }

        @if (canEdit)
        {
            <div class="d-flex gap-2">
                <a asp-action="Edit" asp-route-id="@Model.EpisodeID" class="btn btn-warning">
                    <i class="fas fa-edit"></i> Edit
                </a>
                <a asp-action="Delete" asp-route-id="@Model.EpisodeID" class="btn btn-danger">
                    <i class="fas fa-trash"></i> Delete
                </a>
            </div>
        }
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h3><i class="fas fa-comments"></i> Comments</h3>
    </div>
    <div class="card-body">
        @if (User.Identity.IsAuthenticated)
        {
            <form asp-action="AddComment" method="post" class="mb-4">
                @Html.AntiForgeryToken()
                <input type="hidden" name="episodeId" value="@Model.EpisodeID" />
                <div class="mb-3">
                    <label class="form-label">Add a comment</label>
                    <textarea name="commentText" class="form-control" rows="3" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-paper-plane"></i> Post Comment
                </button>
            </form>
        }
        else
        {
            <p class="alert alert-info">Please <a asp-area="Identity" asp-page="/Account/Login">login</a> to add comments.</p>
        }

        @if (ViewBag.Comments != null && ViewBag.Comments.Count > 0)
        {
            @foreach (var comment in ViewBag.Comments)
            {
                var commentTime = DateTime.Parse(comment.Timestamp);
                var hoursSince = (DateTime.UtcNow - commentTime).TotalHours;
                var canEditComment = User.Identity.IsAuthenticated &&
                (isAdmin || (User.Identity.Name == comment.UserID && hoursSince < 24));

                <div class="card mb-3" id="comment-@comment.CommentID">
                    <div class="card-body">
                        <h6 class="card-subtitle mb-2">
                            <i class="fas fa-user-circle"></i> @comment.Username
                            <small class="text-muted">- @commentTime.ToString("MMM dd, yyyy hh:mm tt")</small>
                        </h6>
                        <p class="card-text comment-text-display-@comment.CommentID">@comment.Text</p>

                        <form asp-action="EditComment" method="post" class="comment-edit-form-@comment.CommentID" style="display:none;">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="episodeId" value="@Model.EpisodeID" />
                            <input type="hidden" name="commentId" value="@comment.CommentID" />
                            <div class="mb-2">
                                <textarea name="commentText" class="form-control" rows="3" required>@comment.Text</textarea>
                            </div>
                            <button type="submit" class="btn btn-sm btn-success">
                                <i class="fas fa-save"></i> Save
                            </button>
                            <button type="button" class="btn btn-sm btn-secondary" onclick="cancelEdit('@comment.CommentID')">
                                Cancel
                            </button>
                        </form>

                        @if (canEditComment)
                        {
                            <button class="btn btn-sm btn-warning comment-edit-btn-@comment.CommentID" onclick="showEditForm('@comment.CommentID')">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No comments yet. Be the first to comment!</p>
        }
    </div>
</div>

@section Scripts {
    <script>
        function showEditForm(commentId) {
            document.querySelector('.comment-text-display-' + commentId).style.display = 'none';
            document.querySelector('.comment-edit-btn-' + commentId).style.display = 'none';
            document.querySelector('.comment-edit-form-' + commentId).style.display = 'block';
        }

        function cancelEdit(commentId) {
            document.querySelector('.comment-text-display-' + commentId).style.display = 'block';
            document.querySelector('.comment-edit-btn-' + commentId).style.display = 'inline-block';
            document.querySelector('.comment-edit-form-' + commentId).style.display = 'none';
        }
    </script>
}